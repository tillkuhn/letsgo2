package net.timafe.letsgo2.domain

import com.amazonaws.services.dynamodbv2.datamodeling.*
import net.timafe.letsgo2.config.DYNAMODB_PREFIX
import java.io.Serializable
import java.time.Instant
import javax.validation.constraints.NotNull

/**
 * A Place.
 */
//@Entity
//@Table(name = "place")
//@Cache(usage = CacheConcurrencyStrategy.NONSTRICT_READ_WRITE)
@DynamoDBTable(tableName = DYNAMODB_PREFIX + "place")
class Place(

    /*
    @Id
    @GeneratedValue(strategy = GenerationType.SEQUENCE, generator = "sequenceGenerator")
    @SequenceGenerator(name = "sequenceGenerator")
    var id: Long? = null,
     */

    @DynamoDBHashKey
    @DynamoDBAutoGeneratedKey
    var id: String? = null,

    @get: NotNull
    // @Column(name = "name", nullable = false)
    var name: String? = null,

    // @Column(name = "summary")
    var summary: String? = null,

    // @Column(name = "image_url")
    var imageUrl: String? = null,

    // @Column(name = "rating")
    var rating: Int? = null,

    // @Column(name = "lotype")
    var lotype: String? = null,

    // @Column(name = "country")
    var country: String? = null,

    // @Column(name = "updated_by")
    var updatedBy: String? = null,
    var createdBy: String? = null,

    // @Column(name = "coordinates")
    @DynamoDBTyped(DynamoDBMapperFieldModel.DynamoDBAttributeType.L)
    var coordinates: List<Double>? = null,

    // @Column(name = "notes")
    var notes: String? = null,

    // @Column(name = "updated_at")
    //  Place[updatedAt]; could not unconvert attribute
    // maybe https://stackoverflow.com/questions/28077435/dynamodbmapper-for-java-time-localdatetime
    // or https://github.com/derjust/spring-data-dynamodb-examples/blob/master/src/main/java/com/github/derjust/spring_data_dynamodb_examples/custom/User.java
    //@DynamoDBIgnore
    @DynamoDBTypeConverted(converter = InstantNoodle::class)
    var updatedAt: Instant? = null,

    @DynamoDBTypeConverted(converter = InstantNoodle::class)
    var createdAt: Instant? = null,

    // @Column(name = "primary_url")
    var primaryUrl: String? = null

    // jhipster-needle-entity-add-field - JHipster will add fields here, do not remove
) : Serializable {
    // jhipster-needle-entity-add-getters-setters - JHipster will add getters and setters here, do not remove

    override fun toString() = "Place{" +
        "id=$id" +
        ", name='$name'" +
        ", summary='$summary'" +
        ", imageUrl='$imageUrl'" +
        ", rating=$rating" +
        ", lotype='$lotype'" +
        ", country='$country'" +
        ", updatedBy='$updatedBy'" +
        ", coordinates='$coordinates'" +
        ", notes='$notes'" +
        ", updatedAt='$updatedAt'" +
        ", primaryUrl='$primaryUrl'" +
        "}"

    override fun equals(other: Any?): Boolean {
        if (this === other) return true
        if (javaClass != other?.javaClass) return false

        other as Place

        if (id != other.id) return false
        if (name != other.name) return false
        if (summary != other.summary) return false
        if (imageUrl != other.imageUrl) return false
        if (rating != other.rating) return false
        if (lotype != other.lotype) return false
        if (country != other.country) return false
        if (updatedBy != other.updatedBy) return false
        if (createdBy != other.createdBy) return false
        if (coordinates != other.coordinates) return false
        if (notes != other.notes) return false
        if (updatedAt != other.updatedAt) return false
        if (createdAt != other.createdAt) return false
        if (primaryUrl != other.primaryUrl) return false

        return true
    }

    override fun hashCode(): Int {
        var result = id?.hashCode() ?: 0
        result = 31 * result + (name?.hashCode() ?: 0)
        result = 31 * result + (summary?.hashCode() ?: 0)
        result = 31 * result + (imageUrl?.hashCode() ?: 0)
        result = 31 * result + (rating ?: 0)
        result = 31 * result + (lotype?.hashCode() ?: 0)
        result = 31 * result + (country?.hashCode() ?: 0)
        result = 31 * result + (updatedBy?.hashCode() ?: 0)
        result = 31 * result + (createdBy?.hashCode() ?: 0)
        result = 31 * result + (coordinates?.hashCode() ?: 0)
        result = 31 * result + (notes?.hashCode() ?: 0)
        result = 31 * result + (updatedAt?.hashCode() ?: 0)
        result = 31 * result + (createdAt?.hashCode() ?: 0)
        result = 31 * result + (primaryUrl?.hashCode() ?: 0)
        return result
    }


    /*
    companion object {
        private const val serialVersionUID = 1L
    }
    */

}
